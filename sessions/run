#!/bin/bash

# Env Vars:
# REPOSITORY: name of the image registry/namespace to get the images

# Clean up previous run
ic ce app delete -n redis -f --wait=true > /dev/null 2>&1 || true
ic ce app delete -n myapp -f --wait=true > /dev/null 2>&1 || true

set -ex
export REPOSITORY=${REPOSITORY:-ibmcom}

# Deploy Redis as an app. Make sure we only ever have 1 instance running
ic ce app create -n redis --image redis --user 999 --cl --min=1 --max=1 \
  --port 6379

# Get the Redis pod's IP address so we can hit it directly
`ic ce project current  | grep export`  # since we call kubectl
POD=$(kubectl get pods | grep -i redis.*running | sed "s/ .*$//")
IP=$(kubectl get pod/$POD -o custom-columns=ip:.status.podIP --no-headers)

# Create the stateful app and pass it the Redis IP
ic ce app create -n myapp -i ${REPOSITORY}/sessions -e IP=$IP --cn=5 --min=3

# Get the URL of the app for later use
URL=$(ic ce app get -n myapp -o jsonpath={.status.url})

# Now call the app to make sure it works
curl -s $URL

# Now call it 98 more times in parallel. Notice the hostname changes
set +x
for i in `seq 1 98` ; do
  curl $URL &
done
wait
set -x

# Verify the app was hit 100 times total
if ! [[ "$(curl -s $URL)" == "Counter: 100 "* ]]; then
  echo "Unexpected output"
  exit 1
fi

# Clean up
ic ce app delete -n redis -f
ic ce app delete -n myapp -f
